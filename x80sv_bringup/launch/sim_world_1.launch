<launch>

	<param name="robot_description" command="$(find xacro)/xacro.py '$(find x80sv_description)/urdf/x80sv.xacro'" />

	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<!-- <arg name="debug" value="true"/> -->
		<arg name="world_name" value="$(find x80sv_simulation)/worlds/localnav_world_1.world"/>
	</include> 

	<node name="rqt_gui" pkg="rqt_gui" type="rqt_gui" required="true"/>

 
	<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model x80sv" />
	<rosparam file="$(find x80sv_simulation)/config/x80sv_control.yaml" command="load"/>
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />

	<node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/x80sv" args="joint_state_controller" />
    
           <!-- Gmapping node: -->
	<node name="slam_gmapping" pkg="gmapping" type="slam_gmapping" output="screen" args="scan:=/x80sv/laser/scan">
		<param name="maxRange" value="4.0"/>
		<param name="maxUrange" value="3.9"/>	
	</node>
	    
      <!-- Node that does planning navigation -->
<!--
	<node name="move_base1" pkg="move_base" type="move_base" output="screen" respawn="false">
    <rosparam file="$(find x80sv_bringup)/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find x80sv_bringup)/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find x80sv_bringup)/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find x80sv_bringup)/global_costmap_params.yaml" command="load" />
	</node>
-->
	
</launch>
